const text = `
1. f (x) = (ln x) 13/4; xi = 2, 3, 4; a = 2.5.
2. f (x) = (ln x) 17/4; xi = 9, 11, 13; a = 10.5.
3. f (x) = (ln x) 12/5; xi = 4, 5, 6; a = 4.5.
4. f (x) = (ln x) 4/7; xi= 3, 6, 9; a = 8.5.
5. f (x) = (ln x) 11/3; xi = 5, 6, 7; a = 5.5.
6. f (x) = (ln x) 13/3; xi = 9, 11, 13; a = 11.5.
7. f (x) = (ln x) 11/2; xi = 6, 7, 8; a = 6.5.
8. f (x) = (ln x) 12/11; xi = 10, 12, 14; a = 13.5.
9. f (x) = (ln x) 1/2; xi = 7, 8, 9; a = 7.5.
10. f (x) = (ln x) 13/7; xi = 8, 11, 14; a = 12.5.
11. f (x) = (ln x) 3/2; xi = 8, 9, 10; a = 8.5.
12. f (x) = (ln x) 10/9; xi = 11, 13, 15; a = 12.5.
13. f (x) = (ln x) 11/5; xi = 2, 4, 6; a = 4.5.
14. f (x) = (ln x) 9/7; xi = 9, 12, 15; a = 11.5.
15. f (x) = (ln x) 10/7; xi = 4, 6, 8; a = 6.5.
16. f (x) = (ln x) 9/5; xi = 5, 8, 11; a = 9.5.
17. f (x) = (ln x) 11/7; xi = 6, 8, 10; a = 8.5.
18. f (x) = (ln x) 9/2; xi = 11, 12, 13; a = 11.5.
19. f (x) = (ln x) 12/7; xi = 2, 5, 8; a = 5.5.
20. f (x) = (ln x) 3/5; xi = 6, 9, 12; a = 11.5.
21. f (x) = (ln x) 1/3; xi = 5, 8, 11; a = 8.5.
22. f (x) = (ln x) 10/7; xi = 6, 9, 12; a = 10.5.
23. f (x) = (ln x) 5/3; xi = 2, 6, 10; a = 6.5.
24. f (x) = (ln x) 13/5; xi = 7, 10, 13; a = 12.5.
25. f (x) = (ln x) 9/4; xi = 3, 6, 9; a = 6.5.
26. f (x) = (ln x) 8/9; xi = 2, 4, 6; a = 4.5.
27. f (x) = (ln x) 5/7; xi = 8, 12, 16; a = 9.5.
28. f (x) = (ln x) 7/11; xi = 5, 7, 9; a = 8.5.
29. f (x) = (ln x) 7/13; xi = 3, 5, 7; a = 3.5.
30. f (x) = (ln x) 11/20; xi = 11, 14, 17; a = 15.5.
`
    
const text1 = text.split('\n').filter(x => x)
.map(x => x.split('.', 2))
.map(x => x[1])
.map(x => x.split(';'))
.map(x => ({
    "f": x[0].replace(' f (x) = (ln x) ', 'lambda x: (np.log(x)) ** (') + ')',
    "xi": x[1].replace(' xi = ', ''),
    "a": x[2].replace(' a = ', '')
}))
.map((x, index) => `    {
        "title": "${index + 1}",
        "x": ${x['xi']},
        "a": ${x['a']},
        "f": ${x['f']}
    },`)
.join('\n')

console.log(text1);
