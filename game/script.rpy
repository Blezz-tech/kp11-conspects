
define img_tutor_1 =  im.FactorScale("tutor 1.png", 0.5)
define img_tutor_2 =  im.FactorScale("tutor 2.png", 0.5)
define img_tutor_3 =  im.FactorScale("tutor 3.png", 0.5)
define img_tutor_4 =  im.FactorScale("tutor 4.png", 0.5)
define img_tutor_5 =  im.FactorScale("tutor 5.png", 0.5)
define img_tutor_6 =  im.FactorScale("tutor 6.png", 0.5)
define img_tutor_7 =  im.FactorScale("tutor 7.png", 0.5)

define e = Character('', color="#c8ffc8")

label start:

    call tutor_1 from _call_tutor_1 
    call tutor_2 from _call_tutor_2 
    call tutor_3 from _call_tutor_3
    call tutor_4 from _call_tutor_4
    call tutor_5 from _call_tutor_5
    call tutor_6 from _call_tutor_6
    call tutor_7 from _call_tutor_7
    call tutor_8 from _call_tutor_8
    call tutor_9 from _call_tutor_9
    call tutor_10 from _call_tutor_10
    call tutor_11 from _call_tutor_11
    call tutor_12 from _call_tutor_12
    call tutor_13 from _call_tutor_13
    call tutor_14 from _call_tutor_14

    return


label tutor_1:

    e "Гайд по flexbox"

    e "Основные термины"

    show image img_tutor_1 at truecenter

    e "Флекс-контейнер: элемент, к которому применяется свойство display: flex. Вложенные в него элементы подчиняются правилам раскладки флексов."

    e "Флекс-элемент: элемент, вложенный во флекс-контейнер."

    hide image img_tutor_1

    show image img_tutor_2 at truecenter

    e "Основная ось: основная направляющая флекс-контейнера, вдоль которой располагаются флекс-элементы."

    e "Поперечная (побочная, перпендикулярная) ось: ось, идущая перпендикулярно основной. Позже вы поймёте, для чего она нужна."

    hide image img_tutor_2

    show image img_tutor_3 at truecenter

    e "Начало / конец основной оси: точки в начале и в конце основной оси соответственно. Это пригодится нам для выравнивания флекс-элементов."

    e "Начало / конец поперечной оси: точки в начале и в конце поперечной оси соответственно."

    hide image img_tutor_3

    show image img_tutor_4 at truecenter

    e "Размер по основной оси (основной размер): размер флекс-элемента вдоль основной оси. Это может быть ширина или высота в зависимости от направления основной оси."

    e "Размер по поперечной оси (поперечный размер): размер флекс-элемента вдоль поперечной оси. Это может быть ширина или высота в зависимости от направления поперечной оси."

    e "Этот размер всегда перпендикулярен основному размеру. Если основной размер — это ширина, то поперечный размер — это высота, и наоборот."

    hide image img_tutor_4

    return


label tutor_2:

    e "Свойства флекс-контейнера"

    e "Свойство display"

    e "Когда мы задаём какому-то элементу значение flex для свойства display, мы превращаем этот элемент в флекс-контейнер. Внутри него начинает действовать флекс-контекст, его дочерние элементы начинают подчиняться свойствам флексбокса."

    e "Снаружи флекс-контейнер выглядит как блочный элемент — занимает всю ширину родителя, следующие за ним элементы в разметке переносятся на новую строку."

    e "Если контейнеру задано значение inline-flex, то снаружи он начинает вести себя как строчный (инлайн) элемент — размеры зависят только от внутреннего контента, встаёт в строку с другими элементами."

    e "Внутри это ровно такой же флекс-контейнер, как и при предыдущем значении."

    return


label tutor_3:

    show image img_tutor_5 at truecenter

    e "Свойство flex-direction"

    e "Свойство управления направлением основной и поперечной осей."

    e "Возможные значения:"

    e "row (значение по умолчанию) — основная ось идёт горизонтально слева направо, поперечная ось идёт вертикально сверху вниз."

    e "row-reverse — основная ось идёт горизонтально справа налево, поперечная ось идёт вертикально сверху вниз."

    e "column — основная ось идёт вертикально сверху вниз, поперечная ось идёт горизонтально слева направо."

    e "column-reverse — основная ось идёт вертикально снизу вверх, поперечная ось идёт горизонтально слева направо."

    e "Важный момент:"

    e "на сайтах с направлением текста справа налево, например, на сайте на арабском языке, для значений row и row-reverse основная ось будет идти в обратном направлении."

    e "Для значений column и column-reverse своё направление поменяет поперечная ось."

    hide image img_tutor_5

    return


label tutor_4:

    show image img_tutor_6 at truecenter

    e "Свойство flex-wrap"

    e "По умолчанию значение у свойства flex-wrap — nowrap."

    e "При этом флекс-элементы помещаются (или пытаются уместиться) в один ряд и не переносятся в новый ряд, даже если не влезают в размеры родителя."

    e "Установив значение wrap, мы можем изменить это поведение, и флекс-элементы будут иметь возможность перенестись в новый ряд, если не влезают в одну линию в рамках родителя."

    e "Ещё одно возможное значение — wrap-reverse."

    e "В этом случае элементы будут располагаться снизу вверх, заполнив собой сперва нижний ряд, а те, что не влезли, перепрыгнут в ряд выше."

    hide image img_tutor_6

    return


label tutor_5:

    e "Свойство flex-flow"

    e "Это свойство-шорткат для одновременного определения значений свойств flex-direction и flex-wrap."

    e "Как и со всеми шорткатами, с этим стоит быть осторожным."

    e "Хоть он и позволяет сэкономить пару строк кода, в случае переопределения одного из значений придётся переписывать свойство целиком, повторяя второе значение, которое не меняется."

    e "В таком случае проще было бы иметь два отдельных свойства и менять значения отдельно."

    return



label tutor_6:

    e "Свойство flex-flow"

    e "Свойство позволяет выравнивать флекс-элементы внутри флекс-контейнера по основной оси."

    e "Возможные значения:"

    e "start — элементы прижимаются к тому краю, откуда начинается чтение на том языке, на котором отображается сайт."

    e "end — элементы прижимаются к краю, противоположному началу направления чтения на языке сайта."

    e "flex-start — элементы прижимаются к краю, от которого начинается основная ось."

    e "flex-end — элементы прижимаются к краю, у которого основная ось заканчивается."

    e "left — элементы прижмутся к левому краю родителя."

    e "right — элементы прижмутся к правому краю родителя."

    e "center — элементы выстраиваются по центру родителя."

    e "space-between — крайние элементы прижимаются к краям родителя, оставшиеся выстраиваются внутри контейнера равномерно, так, чтобы между ними были одинаковые отступы."

    e "space-around — свободное пространство делится поровну между элементами и по половине от этой доли размещается по бокам от каждого элемента."

    e "Таким образом, между соседними элементами будет равное расстояние, а снаружи крайних элементов — по половине этого расстояния."

    e "space-evenly — свободное место будет распределено так, чтобы расстояние между любыми двумя элементами было одинаковым и расстояние от крайних элементов до края было таким же."

    e "Хотя большинство значений поддерживаются основными браузерами, с некоторыми из них могут быть трудности."

    return


label tutor_7:

    e "Свойство align-content"

    e "Свойство распределяет свободное пространство по поперечной оси между рядами флекс-элементов. Предположим, у вас 11 элементов в 3 рядах. Если размер родителя по поперечной оси позволяет, то при помощи align-content можно распределять строчки элементов: по верхнему краю, по нижнему, по центру или равномерно."

    e "Не имеет видимого значения, если элементы располагаются в один ряд."

    e "Возможные значения:"

    e "stretch (значение по умолчанию) — ряды растягиваются одинаково, так, чтобы занять всё доступное пространство родителя."

    e "flex-start / start — все ряды располагаются у начала поперечной оси. Первое значение не зависит от направления чтения текущего языка, в отличие от второго."

    e "flex-end / end — все ряды располагаются у конца поперечной оси. end «уважает» направление чтения текущего языка."

    e "center — ряды выравниваются по центру родителя."

    e "space-between — первый ряд прижимается к началу поперечной оси, последний — к концу поперечной оси, а остальные располагаются так, чтобы свободное пространство было поделено на отступы между ними равномерно."

    e "space-around — отступы у каждого ряда равнозначны отступам у любого другого ряда."

    e "space-evenly — отступы между рядами и от краёв родителя одинаковые."

    return


label tutor_8:

    e "Свойство gap"

    e "С помощью этого свойства можно с лёгкостью задавать отступы между строками и столбцами."

    e "Является краткой записью свойств row-gap и column-gap."

    e "Может иметь одно или два значения."

    e "Если указано только одно, то column-gap автоматически равен row-gap."

    e "Если указаны два значения, то первое будет задавать отступы между рядами (row-gap), а второе — между колонками (column-gap)."

    e "Значения можно указывать в любых доступных единицах измерения, включая проценты."

    e "Допускается использование функции calc()."

    return


label tutor_9:

    show image img_tutor_7 at truecenter

    e "Свойства флекс-элемента"

    e "Свойство order"

    e "При помощи свойства order можно менять порядок отображения флекс-элементов внутри флекс-контейнера."

    e "По умолчанию элементы отображаются в том порядке, в котором они расположены в разметке, а значение свойства order равно 0."

    e "Значение задаётся в виде целого отрицательного или положительного числа. Элементы встают по возрастающей."

    hide image img_tutor_7

    return


label tutor_10:

    e "Свойства flex-grow"

    e "Это свойство указывает, может ли вырастать флекс-элемент при наличии свободного места, и насколько."

    e "По умолчанию значение равно 0."

    e "Значением может быть любое положительное целое число (включая 0)."

    e "Если у всех флекс-элементов будет прописано flex-grow: 1, то свободное пространство в контейнере будет равномерно распределено между всеми."

    e "Если при этом одному из элементов мы зададим flex-grow: 2, то он постарается занять в два раза больше свободного места, чем его соседи."

    return


label tutor_11:

    e "Свойства flex-shrink"

    e "Свойство flex-shrink полностью противоположно свойству flex-grow."

    e "Если в контейнере не хватает места для расположения всех элементов без изменения размеров, то свойство flex-shrink указывает, в каких пропорциях элемент будет уменьшаться."

    e "Чем больше значение у этого свойства, тем быстрее элемент будет сжиматься по сравнению с соседями, имеющими меньшее значение."

    e "Значение по умолчанию — 1. Значением может быть любое целое положительное число (включая 0)."

    e "Два предыдущих свойства работают с пропорциональным разделением пространства, не с конкретными размерами."

    e "Они довольно непростые, даже опытный разработчик не всегда знает, как они в точности работают. Загляните в конец статьи, если хотите подробнее почитать о каждом из них."

    return


label tutor_12:

    e "Свойства flex-basis"

    e "Свойство flex-basis указывает на размер элемента до того, как свободное место будет распределено"

    e "Значением может быть размер в любых относительных или абсолютных единицах: 20rem, 5vw, 250px."

    e "А также можно использовать ключевое слово auto (значение по умолчанию)."

    e "В этом случае при расчёте размера элемента будут приниматься во внимание значения свойств width, max-width, min-width или аналогичные свойства высоты, в зависимости от того, в каком направлении идёт основная ось."

    e "Если никакие размеры не заданы, а свойству flex-basis установлено значение auto, то элемент занимает столько пространства, сколько нужно для отображения контента."

    return

label tutor_13:

    e "Свойства flex"

    e "Свойство-шорткат, с помощью которого можно указать значение трёх свойств одновременно:"

    e "flex-grow, flex-shrink и flex-basis."

    e "Первое значение является обязательным, остальные опциональны."

    e "Значение по умолчанию: 0 1 auto"

    e "что расшифровывается как flex-grow: 0, flex-shrink: 1, flex-basis: auto."

    return

label tutor_14:

    e "Свойства align-self"

    e "При помощи этого свойства можно выровнять один или несколько элементов иначе, чем задано у родительского элемента."

    e "Например, в коде выше у родителя задано выравнивание вложенных элементов по верхнему краю родителя."

    e "А для элемента с классом .item мы задаём выравнивание по нижнему краю."

    return
